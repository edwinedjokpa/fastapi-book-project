name: Deployment Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        env:
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          set -e
          echo "Starting deployment on VPS..."
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no "$VPS_USERNAME@$VPS_HOST" <<'EOF'
            set -e
            echo "Connected to VPS"

            cd /home/deploy_user/fastapi-book-project || { echo 'Failed to navigate'; exit 1; }
            git pull origin main || { echo 'Git pull failed'; exit 1; }

            # Ensure logs directory exists
            mkdir -p /home/deploy_user/fastapi-book-project/logs

            # Activate virtual environment and install dependencies
            source venv/bin/activate
            pip install -r requirements.txt || { echo 'Failed to install dependencies'; exit 1; }

            # Restart FastAPI service properly
            sudo systemctl restart fastapi || { echo 'Failed to restart FastAPI'; exit 1; }

            # Reload Nginx safely
            sudo systemctl reload nginx || { echo 'Failed to reload Nginx'; exit 1; }

            echo "Deployment completed successfully!"
          EOF

      - name: Notify Deployment Success
        run: echo "Deployment completed successfully!"

      - name: Handle Failure
        if: failure()
        run: echo "Deployment failed! Check logs for details."
